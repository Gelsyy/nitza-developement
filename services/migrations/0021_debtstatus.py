# Generated by Django 3.2.19 on 2023-06-12 14:09

from django.db import migrations, models
import django.db.models.deletion


def create_debt_status(apps, schema_editor):
    Payment = apps.get_model('services', 'Payment')
    DebtStatus = apps.get_model('services', 'DebtStatus')
    debt_payments = Payment.objects.filter(category__name='debt')

    for payment in debt_payments:
        ds = DebtStatus.objects.create(debt=payment)
        if payment.order.associated:
            if not (payment.order.associated.debt > 0):
                ds.status = 'paid'
                payment.order.associated.debt = 0
                payment.order.associated.save()
                ds.save()
            elif payment.amount != payment.order.associated.debt:
                ds.status = 'paid'
                ds.save()


def reverse_debt_status(apps, schema_editor):
    DebtStatus = apps.get_model('services', 'DebtStatus')
    DebtStatus.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('services', '0020_alter_paymentcategory_chartcolor_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='DebtStatus',
            fields=[
                ('id', models.AutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), (
                    'cleared', 'Cleared'), ('lost', 'Lost')], default='pending', max_length=20)),
                ('debt', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE, to='services.payment')),
            ],
        ),
        migrations.RunPython(create_debt_status,
                             reverse_code=reverse_debt_status),
    ]
